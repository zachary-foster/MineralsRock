<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  
  <ThingDef Name="WeatheredSandstone" ParentName="WeatheredRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>WeatheredSandstone</defName>
    <label>Weathered Sandstone</label>
    <description>An impassable mass of compacted sand, sculpted by weather and time into flowing shapes.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredSandstone</texPath>
      <color>(126,104,94)</color>
    </graphicData>
    <uiIconPath>Things/Rock/WeatheredSandstone/WeatheredSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>900</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>4</Beauty>
    </statBases>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.3</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>4</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.02</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>Sandstone_Rough</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Sandstone_Rough</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkFlint</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>Sandstone</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>weathered</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.2</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="SolidSandstone" ParentName="SolidRockBase" Class="MineralsRock.ThingDef_SolidRock">
    <defName>SolidSandstone</defName>
    <label>Solid Sandstone</label>
    <description>A solid wall of sandstone, a sedimentary rock made of cemented silica and feldspar grains.</description>
    <graphicData>
      <texPath>Things/Rock/SolidSandstone</texPath>
      <color>(126,104,94)</color>
    </graphicData>
    <uiIconPath>Things/Rock/SolidSandstone/SolidSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>0</Beauty>
    </statBases>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.5</mineableDropChance>
      <mineablePreventMeteorite>true</mineablePreventMeteorite>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.01</minClusterProbability>
    <maxClusterProbability>0.01</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>Sandstone_Rough</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Sandstone_Rough</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkAlabaster</ResourceDefName>
        <DropProbability>0.005</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>Sandstone</li>
      <li>SandstoneBoulder</li>
      <li>HewnSandstone</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>solid</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.2</mineSpeedFactor>
  </ThingDef>

  
  <ThingDef Name="HewnSandstone" ParentName="HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>HewnSandstone</defName>
    <label>Hewn Sandstone</label>
    <description>A hewn wall of sandstone, a sedimentary rock made of cemented silica and feldspar grains.</description>
    <graphicData>
			<texPath>Things/Rock/HewnSandstone</texPath>
      <color>(126,104,94)</color>
    </graphicData>
    <uiIconPath>Things/Rock/HewnSandstone/HewnSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>1200</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>1</Beauty>
    </statBases>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.5</mineableDropChance>
      <smoothedThing>SmoothedHewnSandstone</smoothedThing>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>Sandstone_Rough</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Sandstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkAlabaster</ResourceDefName>
        <DropProbability>0.01</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>Sandstone</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>hewn</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.1</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="SmoothedHewnSandstone" ParentName="HewnRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>SmoothedHewnSandstone</defName>
    <label>Smoothed sandstone wall</label>
    <description>A smoothed wall of sandstone. The layers of different colors make it quite interesting.</description>
    <graphicData>
			<texPath>Things/Rock/SmoothedSandstone</texPath>
      <color>(126,104,94)</color>
    </graphicData>
    <uiIconPath>Things/Rock/SmoothedSandstone/SmoothedSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>1100</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>3</Beauty>
    </statBases>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.5</mineableDropChance>
    </building>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>1</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkAlabaster</ResourceDefName>
        <DropProbability>0.01</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>wall</li>
      <li>hewn</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.1</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="BoulderSandstone" ParentName="BoulderRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>BoulderSandstone</defName>
    <label>Sandstone outcropping</label>
    <description>A sandstone outcropping, sculpted by weather and time into flowing shapes.</description>
    <graphicData>
      <texPath>Things/Rock/PassableSandstone</texPath>
      <color>(126,104,94)</color>
    </graphicData>
    <uiIconPath>Things/Rock/PassableSandstone/PassableSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <fillPercent>0.3</fillPercent>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>2</Beauty>
    </statBases>
    <pathCost>50</pathCost>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.3</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.04</minClusterProbability>
    <maxClusterProbability>0.06</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>1</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.6</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
			<li>Sandstone_Rough</li>
      <li>WeatheredSandstone</li>
      <li>Sandstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>WeatheredSandstone</li>
      <li>Sandstone</li>
    </associatedOres>
    <nearAssociatedOreBonus>7</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>true</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.2</min>
      <max>1.6</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>1.0</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.0</visualSpread>
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>MAU_ChunkFlint</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>ChunkSandstone</li>
    </ThingsToReplace>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>rock</li>
      <li>boulder</li>
      <li>chunk_replacer</li>
    </tags>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.2</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="PassableSandstone" ParentName="SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>PassableSandstone</defName>
    <label>Sandstone rocks</label>
    <description>Sandstone rocks, sculpted by weather and time into flowing shapes.</description>
    <graphicData>
      <texPath>Things/Rock/PassableSandstone</texPath>
      <color>(126,104,94)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Rock/PassableSandstone/PassableSandstoneA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <fillPercent>0.3</fillPercent>
    <statBases>
      <MaxHitPoints>300</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>2</Beauty>
    </statBases>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.3</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.02</minClusterProbability>
    <maxClusterProbability>0.04</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.6</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
			<li>BoulderSandstone</li>
      <li>WeatheredSandstone</li>
      <li>Sandstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>2</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>WeatheredSandstone</li>
      <li>BoulderSandstone</li>
      <li>Sandstone</li>
    </associatedOres>
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>true</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>3</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.5</min>
      <max>0.9</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.5</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>1.5</visualSpread>
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.3</mineSpeedFactor>
  </ThingDef>
  
  
  <ThingDef Name="SmallPassableSandstone" ParentName="SmallRockBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>SmallPassableSandstone</defName>
    <label>Sandstone Rocks</label>
    <description>Fragmented sandstone rocks. These are slow to move over and provide little cover.</description>
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
      <color>(126,104,94)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Rock/PassableBasalt/PassableBasaltA</uiIconPath>
    <randomColorsOne>
      <li>(126,104,94)</li>
      <li>(124,104,94)</li>
      <li>(126,102,94)</li>
      <li>(126,104,92)</li>
      <li>(128,104,94)</li>
      <li>(126,106,94)</li>
      <li>(126,104,96)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(155,138,107)</li>
      <li>(165,145,112)</li>
      <li>(160,142,109)</li>
    </randomColorsTwo>
    <fillPercent>0.1</fillPercent>
    <statBases>
      <MaxHitPoints>400</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <pathCost>40</pathCost>
    <building>
      <mineableThing>ChunkSandstone</mineableThing>
      <mineableDropChance>0.1</mineableDropChance>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.05</minClusterProbability>
    <maxClusterProbability>0.08</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>4</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>SolidSandstone</li>
      <li>Sandstone</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>SolidSandstone</li>
      <li>Sandstone</li>
    </associatedOres>
    <nearAssociatedOreBonus>2</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>10</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.6</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.9</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.4</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>SandResource</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <ScaleYieldBySkill>false</ScaleYieldBySkill>
      </li>
      <li>
        <ResourceDefName>MAU_SharpStoneShard</ResourceDefName>
        <DropProbability>0.02</DropProbability>
        <CountPerDrop>1</CountPerDrop>
      </li>
      <li>
        <ResourceDefName>SmallFossil</ResourceDefName>
        <DropProbability>0.03</DropProbability>
        <CountPerDrop>1</CountPerDrop>
        <MinMiningSkill>8</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Amber</ResourceDefName>
        <DropProbability>0.05</DropProbability>
        <CountPerDrop>10</CountPerDrop>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- How easy it is to mine -->
    <mineSpeedFactor>1.5</mineSpeedFactor>
  </ThingDef>
  
</Defs>
